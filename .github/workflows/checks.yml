name: Checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.18.x, 1.19.x, 1.20.x ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
      id: go
    - name: Run test scripts
      run: |
        make test-ci
      env:
        GO111MODULE: on
    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make coverage
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.18.x, 1.19.x, 1.20.x ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
      id: go
    - name: Build
      run: make compile
      env:
        GO111MODULE: on
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Test Build
      run: |
        cd website
        if [ -e yarn.lock ]; then
        yarn install --frozen-lockfile
        elif [ -e package-lock.json ]; then
        npm ci
        else
        npm i
        fi
        npm run build
