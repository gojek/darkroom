name: Release

on:
  push:
    tags:
    - v\d+.\d+.\d+

jobs:
  release:
    name: GoReleaser Build & Push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Fetch Tags
      run: git fetch --force --tags
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build & Publish
      env:
        GOLANG_CROSS_VERSION: 1.20.5
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: |
        docker run --rm --privileged -v $(pwd):/darkroom \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $(which docker):$(which docker) -w /darkroom \
        -e GITHUB_TOKEN \
        ghcr.io/goreleaser/goreleaser-cross:v$GOLANG_CROSS_VERSION \
        release --clean
  release-docs:
    name: Publish GH Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Add key to allow access to repository
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        GH_PAGES_DEPLOY: ${{ secrets.CI_DEPLOY_KEY }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        echo "$GH_PAGES_DEPLOY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cat <<EOT >> ~/.ssh/config
        Host github.com
        HostName github.com
        IdentityFile ~/.ssh/id_rsa
        EOT
    - name: Release to GitHub Pages
      env:
        USE_SSH: true
        GIT_USER: git
      run: |
        cd website
        git config --global user.email "actions@gihub.com"
        git config --global user.name "gh-actions"
        if [ -e yarn.lock ]; then
        yarn install --frozen-lockfile
        elif [ -e package-lock.json ]; then
        npm ci
        else
        npm i
        fi
        npx docusaurus deploy
