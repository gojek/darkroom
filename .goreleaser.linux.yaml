before:
  hooks:
  - go version
  - go mod download
builds:
- id: darkroom
  main: .
  binary: darkroom
  goos:
  - linux
  goarch:
  - amd64
  - arm64
  - "386"
  goarm:
  - "6"
  targets:
  - linux_amd64_v1
  - linux_arm64
  - linux_386
  env:
  - CGO_ENABLED=1
  ldflags:
  - -w -s
  - -X github.com/gojek/darkroom/internal/version.version={{ .Version }}
  - -X github.com/gojek/darkroom/internal/version.gitTag={{ .Tag }}
  - -X github.com/gojek/darkroom/internal/version.gitCommit={{ .FullCommit }}
  - -X github.com/gojek/darkroom/internal/version.buildDate={{ .Date }}
dockers:
- use: buildx
  dockerfile: build/Dockerfile.goreleaser
  goos: linux
  goarch: amd64
  image_templates:
  - "gojektech/darkroom:{{ .Version }}-amd64"
  - "gojektech/darkroom:latest-amd64"
  build_flag_templates:
  - "--platform=linux/amd64"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
- use: buildx
  dockerfile: build/Dockerfile.goreleaser
  goos: linux
  goarch: arm64
  image_templates:
  - "gojektech/darkroom:{{ .Version }}-arm64v8"
  - "gojektech/darkroom:latest-arm64v8"
  build_flag_templates:
  - "--platform=linux/arm64/v8"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
- use: buildx
  dockerfile: build/Dockerfile.goreleaser
  goos: linux
  goarch: arm
  goarm: 6
  image_templates:
  - "gojektech/darkroom:{{ .Version }}-armv6"
  - "gojektech/darkroom:latest-armv6"
  build_flag_templates:
  - "--platform=linux/arm/v6"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
- use: buildx
  dockerfile: build/Dockerfile.goreleaser
  goos: linux
  goarch: arm
  goarm: 7
  image_templates:
  - "gojektech/darkroom:{{ .Version }}-armv7"
  - "gojektech/darkroom:latest-armv7"
  build_flag_templates:
  - "--platform=linux/arm/v7"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"

archives:
- format: tar.gz
  name_template: >-
    {{ .ProjectName }}_
    {{- title .Os }}_
    {{- if eq .Arch "amd64" }}x86_64
    {{- else if eq .Arch "386" }}i386
    {{- else }}{{ .Arch }}{{ end }}
    {{- if .Arm }}v{{ .Arm }}{{ end }}
  format_overrides:
  - goos: windows
    format: zip
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - "^docs:"
    - "^test:"
    - "^website"

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
